apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: airflow
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.airflow.syncWave | quote }}
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination: 
    namespace: airflow
    server: https://kubernetes.default.svc
  source:
    repoURL: {{ .Values.global.repo.url }}
    path: charts/airflow
    targetRevision: {{ .Values.global.repo.branch }}
    helm:
      releaseName: airflow
{{- with .Values.airflow.values }}
      values: |-
{{- toYaml . | nindent 8 }}
        env:
        - name: AIRFLOW__KUBERNETES__DAGS_VOLUME_SUBPATH
          value: repo/
        - name: AIRFLOW__CORE__KILLED_TASK_CLEANUP_TIME
          value: 604800
        - name: GIT_REPO
          value: {{ $.Values.global.repo.url }}
        - name: GIT_BRANCH
          value: {{ $.Values.global.repo.branch }}
{{- end }}        
      parameters:
      - name: dags.gitSync.repo
        value: {{ .Values.global.repo.url }}
      - name: dags.gitSync.branch
        value: {{ .Values.global.repo.branch }}
      - name: config.elasticsearch.frontend
        value: logging-kibana.{{ .Values.global.baseDomain }}/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-30m,to:now))&_a=(columns:!(message),filters:!(),index:a16f10f0-cf86-11eb-a0b9-a32be872b9a2,interval:auto,query:(language:kuery,query:'log_id:{log_id}'),sort:!())
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: airflow
  namespace: airflow
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.airflow.syncWave | quote }}
spec:
  host: {{ .Values.airflow.hostName }}.{{ .Values.global.baseDomain }}
  port:
    targetPort: 8080
  to:
    kind: Service
    name: airflow-webserver
    weight: 100
  wildcardPolicy: None
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods", "pods/log"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: pod-reader
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.airflow.syncWave | quote }}
subjects:
- kind: ServiceAccount
  name: airflow-webserver # Name is case sensitive
  namespace: airflow
- kind: ServiceAccount
  name: airflow-worker # Name is case sensitive
  namespace: airflow
roleRef:
  kind: ClusterRole
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: airflow-worker
  namespace: airflow
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.airflow.syncWave | quote }}
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets", "configmaps", "pods"]
  verbs:  ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow-worker
  namespace: airflow
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.airflow.syncWave | quote }}
subjects:
- kind: ServiceAccount
  name: airflow-worker
  namespace: airflow
roleRef:
  kind: Role
  name:  airflow-worker
  apiGroup: rbac.authorization.k8s.io